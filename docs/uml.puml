@startuml

interface IRocketPart {
  + double getMass()
  + Vector createThrust(Vector rotation, double time)
}

interface IForceField {
  + Vector getForce(Vector position, Vector rotation, Vector velocity, double mass, double time)
}

class Wind {
  - double strengthVariation
  - Vector windForce
}

class GravityField {
  - Vector sourcePosition
  - double strength
}

class AirResistance {
  - double dragCoefficient
}


World o-- Rocket
World *-- "1..*" IForceField

Rocket *-- "1..*" IRocketPart

IForceField <|-- Wind
IForceField <|-- GravityField
IForceField <|-- AirResistance

IRocketPart <|-- FuelContainer
IRocketPart <|-- Engine

Engine o- FuelContainer

class Engine {
  - double mass
  - FuelContainer fuelSource
}

class FuelContainer {
  - double containerMass
  - double fuelMass

  + double getRemainingFuel()
  + void takeFuel(double amount)
}

class World {
  - Rocket rocket
  - List<IForceField> forceFields

  + void runSimulation()
}

class Rocket {
  - List<IRocketPart> parts
  - Vector position
  - Vector direction
  - Vector velocity

  + double getMass()
  + Vector getVelocity()
  + Vector getPosition()
  + Vector getDirection()
  + Iterable<IRocketPart> getParts()
  + updateRocket(Vector externalForce, double deltaTime)
}

@enduml